#include <iostream>
#include<vector>
using namespace std;

int Median3(vector<int>& nums, int left, int right)//三数取中值，三个数分别是左右中 排列好
{
	int center = (left + right) / 2;
	if (nums[left] > nums[center])
	{
		swap(nums[left], nums[center]);
	}
	if (nums[left] > nums[right])
	{
		swap(nums[left], nums[right]);
	}
	if (nums[center] > nums[right])
	{
		swap(nums[center], nums[right]);
	}
	swap(nums[center], nums[right]); //把关键值摘出来放在后面，就不用处理它了
	return nums[right];
}

void Qsort(vector<int>& nums, int left, int right)
{
	if (left < right)//防止后面出现越界的情况，这里很重要之前在这里卡住
	{
		int pivot = Median3(nums, left, right);
		int i = left, j = right - 1;
		for (;;)
		{
			while (nums[i] < pivot)//找到比关键值大的
			{
				i++;
			}
			while (nums[j] > pivot)//找到比关键值小的
			{
				j--;
			}
			if (i < j)
			{
				swap(nums[i], nums[j]);
			}
			else
			{
				break;
			}
		}
		swap(nums[i], nums[right]);//这一步之后，nums[i]处是我们之前使用的关键值，左边是比关键值小的，右边是比关键值大的
		Qsort(nums, left, i - 1);
		Qsort(nums, i + 1, right);
	}
}
int main()
{
	vector<int>nums;
	nums.push_back(8);
	nums.push_back(1);
	nums.push_back(4);
	nums.push_back(9);
	nums.push_back(6);
	nums.push_back(3);
	nums.push_back(5);
	nums.push_back(2);
	nums.push_back(7);
	nums.push_back(0);
	Qsort(nums, 0, 9);
	for (int i = 0; i < nums.size(); i++)
	{
		cout << nums[i] << endl;
	}
	return 0;
}
